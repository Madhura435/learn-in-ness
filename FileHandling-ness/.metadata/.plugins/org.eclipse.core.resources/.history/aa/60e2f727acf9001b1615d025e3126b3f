package com.madhura.fileHandling.ness.contoller;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.madhura.fileHandling.ness.model.FileResponse;
import com.madhura.fileHandling.ness.model.Filedocument;
import com.madhura.fileHandling.ness.service.FileByDatabaseService;

@RestController
@RequestMapping("/DBfile")
/**
 * baaaaaaaaaaaaaaa baaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.
 * nananaan naaaaaaaa nanaaaaaaaaaaaaaaaaaa.
*/
public class FileByDatabaseController {
@Autowired	
private FileByDatabaseService fileByDatabaseService;
@PostMapping("/single/uploadDb")
public FileResponse SingleFileUpload(@RequestParam("file") MultipartFile file) throws IOException
{
	String FileName=fileByDatabaseService.singleFileStoreDd(file);
	String Upoladedurl=ServletUriComponentsBuilder
			.fromCurrentContextPath()
			.path("/DBfile/downloadDb/")
			.path(FileName)
			.toUriString();
	String contentType=file.getContentType();
	
	FileResponse fileResponse=new FileResponse(FileName,contentType,Upoladedurl);
	return fileResponse;
}
@GetMapping("/downloadDb/{fileName}")
public ResponseEntity<byte[]> downloadSingleFile(@PathVariable String fileName,
		HttpServletRequest request)
{
	Filedocument document=fileByDatabaseService.downloadFileDB(fileName);
	String mimeType=request.getServletContext().getMimeType(document.getFilename());
	MediaType contentType=MediaType.parseMediaType(mimeType);
	return ResponseEntity.ok().contentType(contentType).
			//header(HttpHeaders.CONTENT_DISPOSITION,"attachment;fileName="+document.getFilename()).
			header(HttpHeaders.CONTENT_DISPOSITION,"inline;fileName="+document.getFilename()).
			body(document.getDocfile());
}

}